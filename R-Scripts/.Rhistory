biocLite("SRAdb")
source("https://bioconductor.org/biocLite.R")
biocLite("SRAdb")
source("https://bioconductor.org/biocLite.R")
biocLite("SRAdb")
install.packages("Rcpp")
vignette("SRAdb")
install.packages("Rcurl")
install.packages("RCurl")
install.packages("Rcpp")
install.packages("tibble")
install.packages("XML")
install.packages("GEOquery")
biocLite("GEOquery")
source("https://bioconductor.org/biocLite.R")
biocLite("GEOquery")
vignette(GEOquery)
q()
load("~/Documentos/sradb/SRAmetadb.sqlite")
load("~/Documentos/sradb/SRAmetadb.sqlite.gz")
load("~/Documentos/sradb/SRAmetadb.sqlite")
load("~/Documentos/sradb/SRAmetadb.sqlite.gz")
library(SRAdb)
source("https://bioconductor.org/biocLite.R")
biocLite("BiocUpgrade")
installed.packages()
installed.packages(lib.loc = )
library(SRAdb)
sra_dbname <- 'SRAmetadb.sqlite'
R --vanilla
library(SRAdb)
biocLite("BiocUpgrade")
source("https://bioconductor.org/biocLite.R")
biocLite("BiocUpgrade")
ggplot(as.data.frame(UCBAdmissions),
aes(weight = Freq, axis1 = Gender, axis2 = Dept)) +
geom_alluvium(aes(fill = Admit), width = 1/12) +
geom_stratum(width = 1/12, fill = "black", color = "grey") +
geom_label(stat = "stratum", label.strata = TRUE) +
scale_x_continuous(breaks = 1:2, labels = c("Gender", "Dept")) +
ggtitle("UC Berkeley admissions and rejections, by sex and department")
library("ggplot")
library(ggplot2)
ggplot(as.data.frame(UCBAdmissions),
aes(weight = Freq, axis1 = Gender, axis2 = Dept)) +
geom_alluvium(aes(fill = Admit), width = 1/12) +
geom_stratum(width = 1/12, fill = "black", color = "grey") +
geom_label(stat = "stratum", label.strata = TRUE) +
scale_x_continuous(breaks = 1:2, labels = c("Gender", "Dept")) +
ggtitle("UC Berkeley admissions and rejections, by sex and department")
install.packages("ggalluvial")
library(alluvial)
help("alluvial")
vignette(alluvial)
vignette("alluvial")
library(alluvial)
library(plyr)
library(dplyr)
setwd("~/Documentos/gits/GEO_project/R-Scripts/")
GEO<-read.csv(file = "GEO_tablet.tsv", header = T, sep = "\t", na.strings = "", stringsAsFactors = F)
Hs <- GEO[grep("Homo_sapiens", GEO$ORGANISMO), ]
Mm <- GEO [grep("Mus_musculus", GEO$ORGANISMO), ]
homo_musculus<- rbind(Hs, Mm)
rm(GEO)
FINAL_DF <-homo_musculus[0, ]
INTERMEDIATE_DF <- homo_musculus[0, ]
for(i in 1:nrow(homo_musculus)){
message(paste0("Procesando la lÃ­nea ", i))
CELDA<-homo_musculus$ORGANISMO[i]
ESPECIES<-unlist(strsplit(CELDA, split = ","))
ESPECIES <- ESPECIES[!grepl('!Sample', ESPECIES)]
ESPECIES <- ESPECIES [!grepl('1:9', ESPECIES)]
NUMERO_DE_ESPECIES <- length(ESPECIES)
for(x in 1:NUMERO_DE_ESPECIES){
INTERMEDIATE_DF[x,] <-homo_musculus[i,]
INTERMEDIATE_DF[x,"ORGANISMO"] <- ESPECIES[x]
}
FINAL_DF<-rbind(FINAL_DF, INTERMEDIATE_DF)
}
View(FINAL_DF)
write.csv("FINAL_DF_HSMM.csv", FINAL_DF)
write.csv(x = FINAL_DF, "FINAL_HSMM.csv")
